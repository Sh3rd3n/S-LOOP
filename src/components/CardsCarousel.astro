---
---

<div id="carousel" class="w-full h-[500px] sm:h-[400px] flex items-center md:justify-center gap-6 py-6 overflow-x-auto">
    <button class="hidden sm:block bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded">
        ←
    </button>
    <div id='card-1' class='card h-[400px] md:h-[250px] aspect-4/5 bg-teal ml-6'></div>
    <div id='card-2' class='card h-[300px] aspect-4/5 bg-teal'></div>
    <div id='card-3' class='card h-[300px] md:h-[250px] aspect-4/5 bg-teal mr-6'></div>
    <button class="hidden sm:block bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded">
        →
    </button>
</div>

<script is:inline>
    const carousel = document.getElementById('carousel');
    const cards = carousel.querySelectorAll('.card'); // Use querySelectorAll for better performance

    function updateCardHeights() {
        const isMobile = window.innerWidth < 640;
        const baseHeight = isMobile ? 300 : 250;

        cards.forEach(card => {
            const isTaller = isMobile ? (card.id === 'card-1') : (card.id === 'card-2');
            card.style.height = isTaller ? `${baseHeight + 100}px` : `${baseHeight}px`;
        });
    }

    function updateCardHeightsOnScroll() {
        if (window.innerWidth > 640) return; // Only for mobile

        const baseHeight = 300; // Base height for mobile
        cards.forEach(card => {
            const newHeight = Math.round(baseHeight + getVisiblePercentage(card) * 100);
            card.style.height = `${newHeight}px`;
        });
    }

    function getVisiblePercentage(element) {
        const rect = element.getBoundingClientRect();
        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);
        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);

        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);
        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) >= 0);

        const vertVisible = vertInView
            ? ((Math.min(rect.top + rect.height, windowHeight) - Math.max(rect.top, 0)) / rect.height) : 0;
        const horVisible = horInView
            ? ((Math.min(rect.left + rect.width, windowWidth) - Math.max(rect.left, 0)) / rect.width) : 0;

        return vertVisible * horVisible;
    }

    updateCardHeights(); // Initial setup
    window.addEventListener('resize', updateCardHeights);
    carousel.addEventListener('scroll', updateCardHeightsOnScroll);
</script>